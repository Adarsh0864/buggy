{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'production' ? 'https://your-app.railway.app' : 'http://localhost:5001');\nconsole.log('API Base URL:', API_BASE_URL);\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url, config.data);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging and error handling\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.config.url, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$config, _error$response2;\n  console.error('API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  return Promise.reject(error);\n});\nexport const fetchBugs = async () => {\n  try {\n    const response = await api.get('/bugs');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bugs:', error);\n    throw error;\n  }\n};\nexport const createBug = async bugData => {\n  try {\n    const response = await api.post('/bugs', bugData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating bug:', error);\n    throw error;\n  }\n};\nexport const updateBug = async (bugId, bugData) => {\n  try {\n    const response = await api.put(`/bugs/${bugId}`, bugData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating bug:', error);\n    throw error;\n  }\n};\nexport const deleteBug = async bugId => {\n  try {\n    const response = await api.delete(`/bugs/${bugId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting bug:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","console","log","api","create","baseURL","headers","interceptors","request","use","config","_config$method","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$config","_error$response2","message","fetchBugs","get","createBug","bugData","post","updateBug","bugId","put","deleteBug","delete"],"sources":["/Users/adarshmishra/Desktop/company-project/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \n                    (process.env.NODE_ENV === 'production' ? \n                     'https://your-app.railway.app' : \n                     'http://localhost:5001');\n\nconsole.log('API Base URL:', API_BASE_URL);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url, config.data);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for debugging and error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response.status, response.config.url, response.data);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', \n      error.response?.status, \n      error.config?.url, \n      error.response?.data || error.message\n    );\n    return Promise.reject(error);\n  }\n);\n\nexport const fetchBugs = async () => {\n  try {\n    const response = await api.get('/bugs');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bugs:', error);\n    throw error;\n  }\n};\n\nexport const createBug = async (bugData) => {\n  try {\n    const response = await api.post('/bugs', bugData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating bug:', error);\n    throw error;\n  }\n};\n\nexport const updateBug = async (bugId, bugData) => {\n  try {\n    const response = await api.put(`/bugs/${bugId}`, bugData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating bug:', error);\n    throw error;\n  }\n};\n\nexport const deleteBug = async (bugId) => {\n  try {\n    const response = await api.delete(`/bugs/${bugId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting bug:', error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}